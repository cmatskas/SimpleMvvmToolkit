<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>ViewModel Locator Injected Service Agent</Title>
      <Author>Tony Sneed</Author>
      <Description>ViewModel Locator Injected Service Agent</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>mvvminjectedlocator</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>ServiceAgentName</ID>
          <ToolTip>Name of the service agent</ToolTip>
          <Default>MyServiceAgent</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>ViewModelName</ID>
          <ToolTip>Name of the view model</ToolTip>
          <Default>MyViewModel</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[// Create $ViewModelName$ on demand
[ImportMany]
public Lazy<I$ServiceAgentName$, IServiceAgentMetadata>[] $ServiceAgentName$s { get; set; }
public $ViewModelName$ $ViewModelName$
{
    get
    {
        var serviceAgent = $ServiceAgentName$s
            .Where(sa => sa.Metadata.AgentType == agentType).FirstOrDefault();
        $ViewModelName$ viewModel = null;
        if (serviceAgent != null) viewModel = new $ViewModelName$(serviceAgent.Value);
        else if (DesignerProperties.IsInDesignTool) viewModel = new $ViewModelName$();
        return viewModel;
    }
}

// TODO: Move to the ctor to verify service agent creation
//Debug.Assert(this.$ViewModelName$ != null, 
//    string.Format("No I$ServiceAgentName$ has ServiceAgentExport with AgentType = {0}", agentType));$end$]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>